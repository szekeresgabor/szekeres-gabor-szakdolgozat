#!/bin/bash

echo "üìÅ Gy√∂k√©rstrukt√∫ra l√©trehoz√°sa..."
mkdir -p ModularWebApp/{frontend,backend,shared/frontend/core.frontend.package,shared/frontend/ui.frontend.package,shared/backend/core.backend.package}
cd ModularWebApp

# 1. Backend microservice-ek
echo "üöÄ Backend szolg√°ltat√°sok l√©trehoz√°sa..."
cd backend
for service in panaszkezelo-api szerzodeskezelo-api ugyfelkezelo-api identity-api storage-api
do
  dotnet new webapi -n $service
done
cd ..

# 2. K√∂z√∂s backend csomag
echo "üß± K√∂z√∂s backend k√∂nyvt√°r l√©trehoz√°sa..."
cd shared/backend/core.backend.package
dotnet new classlib -n Core.Backend.Package
cd ../../..

# 3. Angular frontend alkalmaz√°sok ‚Äì host + remote modulok
echo "üåê Angular frontend alkalmaz√°sok l√©trehoz√°sa..."
cd frontend

npm install -g @angular/cli

# Host l√©trehoz√°sa
ng new host --routing --style=scss --directory=host --standalone=false
cd host
ng add @angular-architects/module-federation --project host --type host --port 4200
cd ..

# Remote frontendek
for remote in panaszkezelo szerzodeskezelo ugyfelkezelo
do
  ng new $remote --routing --style=scss --directory=$remote --standalone=false
  cd $remote
  ng add @angular-architects/module-federation --project $remote --type remote --host host --port $((RANDOM % 1000 + 4300))
  cd ..
done
cd ..

# 4. K√∂z√∂s frontend csomag strukt√∫ra l√©trehoz√°sa
echo "üß∞ Frontend k√∂z√∂s k√∂nyvt√°rak l√©trehoz√°sa (npm init)..."
cd shared/frontend/core.frontend.package
npm init -y
cd ../ui.frontend.package
npm init -y
cd ../../../..

echo "‚úÖ A modul√°ris projektstrukt√∫ra sikeresen l√©trehozva."