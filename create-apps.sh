#!/bin/bash

# Alap k√∂nyvt√°r l√©trehoz√°sa
mkdir -p ModularWebApp && cd ModularWebApp

echo "üìÅ Projektstrukt√∫ra l√©trehoz√°sa..."

# 1. Backend microservice-ek
echo "üöÄ Backend szolg√°ltat√°sok l√©trehoz√°sa..."
dotnet new sln -n ModularWebApp

for service in panaszkezelo szerzodeskezelo ugyfelkezelo identity storage
do
  dotnet new webapi -n ${service}-api
  dotnet sln add ${service}-api/${service}-api.csproj
done

# 2. Backend k√∂z√∂s k√∂nyvt√°r
echo "üß± K√∂z√∂s backend k√∂nyvt√°r l√©trehoz√°sa..."
dotnet new classlib -n core.backend.package
dotnet sln add core.backend.package/core.backend.package.csproj

# 3. Frontend Angular host alkalmaz√°s
echo "üåê Angular host alkalmaz√°s l√©trehoz√°sa..."
npm install -g @angular/cli
ng new host --routing --style=scss
cd host
ng add @angular-architects/module-federation --project host --type host --port 4200
cd ..

# 4. Angular remote alkalmaz√°sok
echo "üåê Angular remote alkalmaz√°sok l√©trehoz√°sa..."
for frontend in panaszkezelo szerzodeskezelo ugyfelkezelo
do
  ng new $frontend --routing --style=scss
  cd $frontend
  ng add @angular-architects/module-federation --project $frontend --type remote --host host --port $((RANDOM % 1000 + 4201))
  cd ..
done

# 5. Frontend k√∂z√∂s k√∂nyvt√°rak
echo "üß∞ Frontend k√∂z√∂s k√∂nyvt√°rak l√©trehoz√°sa..."
mkdir -p shared/frontend/core.frontend.package
mkdir -p shared/frontend/ui.frontend.package

echo "‚úÖ K√©sz! A projektstrukt√∫ra gener√°l√°sa sikeresen befejez≈ëd√∂tt."